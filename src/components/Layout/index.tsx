import { DownOutlined } from "@ant-design/icons";
import { Layout as AntdLayout, Dropdown, Menu, Space } from "antd";
import type { MenuProps } from "antd";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { PropsWithChildren } from "react";

import styles from "./index.module.css";

// import Image from "next/image";

const { Header, Content, Sider } = AntdLayout;

const items: MenuProps["items"] = [
  {
    label: "图书管理",
    key: "book",

    children: [
      { label: "图书列表", key: "/book" },
      { label: "图书添加", key: "/book/add" },
    ],
  },
  {
    label: "借阅管理",
    key: "borrow",

    children: [
      { label: "借阅列表", key: "/borrow" },
      { label: "借阅添加", key: "/borrow/add" },
    ],
  },

  {
    label: "分类管理",
    key: "category",

    children: [
      { label: "分类列表", key: "/category" },
      { label: "分类添加", key: "/category/add" },
    ],
  },
  {
    label: "用户管理",
    key: "user",

    children: [
      { label: "用户列表", key: "/user" },
      { label: "用户添加", key: "/user/add" },
    ],
  },
];
const userItems: MenuProps["items"] = [
  {
    key: "1",
    label: "用户中心",
  },
  {
    key: "2",
    label: "登出",
  },
];

//因为children是必带属性,报类型错误时可以如下定义
// export function Layout({ children }: { children: ReactNode }) {
const Layout: React.FC<PropsWithChildren> = ({ children }) => {
  //菜单点击事件
  const router = useRouter();
  const handleMenuClick: MenuProps["onClick"] = ({ key }) => {
    console.log(key);
    router.push(key);
  };

  //路径pathname就是菜单列表的每个key值
  const activeMenu = router.pathname;
  //会把_app.tsx中的  <Component {...pageProps} />当做子节点渲染出来
  return (
    <>
      <Head>
        <title></title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <AntdLayout>
          <Header className={styles.header}>
            <div className={styles.logo}>
              {/* <Image /> */}
              白泽-图管
              <span className={styles.changeuser}>
                {/* menu={{items}} 中的items实际为items:items简写,在MenuProps中类型有items*/}
                <Dropdown menu={{ items: userItems }}>
                  <a onClick={(e) => e.preventDefault()}>
                    <Space>
                      Hover me
                      <DownOutlined />
                    </Space>
                  </a>
                </Dropdown>
              </span>
            </div>
          </Header>
          <AntdLayout className={styles.sectionInner}>
            <Sider width={200}>
              <Menu
                mode="inline"
                defaultSelectedKeys={["/book"]}
                defaultOpenKeys={["book"]}
                style={{ height: "100%", borderRight: 0 }}
                items={items}
                selectedKeys={[activeMenu]}
                onClick={handleMenuClick}
              />
            </Sider>
            <AntdLayout className={styles.sectionContent}>
              <Content className={styles.content}>{children}</Content>
            </AntdLayout>
          </AntdLayout>
        </AntdLayout>
      </main>
    </>
  );
};

export default Layout;
